#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        mayus: mayus_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>, <&kp CAPSLOCK>;

            label = "mayus_tap_dance";
        };

        game: game_tap_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "game_tap_dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_WIN>, <&none>, <&to 3>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        // Default Layer: Spanish QWERTY (with ñ)
        default_layer {
            bindings = <
                &kp Q    &kp W    &kp E    &kp R    &kp T    &kp ESC        // Row 1 left half (Q–T), plus Escape
                &kp Y    &kp U    &kp I    &kp O    &kp P    &kp LBKT       // Row 1 right half (Y–P), accent key (´ dead) on last position
                &kp A    &kp S    &kp D    &kp F    &kp G    &kp LSHFT      // Row 2 left (A–G), left Shift on extra key
                &kp H    &kp J    &kp K    &kp L    &kp SEMI &kp RBKT       // Row 2 right (H–L, ñ on semicolon key, brackets key after ñ)
                &kp Z    &kp X    &kp C    &kp V    &kp B    &kp LCTRL      // Row 3 left (Z–B), left Ctrl on extra key
                &kp N    &kp M    &kp COMMA &kp DOT  &kp MINUS &kp RSHFT   // Row 3 right (N, M), comma, period, hyphen on slash key, right Shift
                // Thumb cluster
                &mo LOWER  &kp SPACE  &kp LALT                               // Left thumb keys: Lower layer, Space, Left Alt
                &mo RAISE  &kp ENTER  &kp BSPC                              // Right thumb keys: Raise layer, Enter, Backspace
            >;
            // The semicolon key (&kp SEMI) outputs ñ/Ñ under Español (Chile) layout 
            // The accent key (&kp LBKT) is the acute accent dead key (´) and Shift yields + 
            // The bracket key (&kp RBKT) after ñ is for the square bracket/brace (as on Chilean keyboards)
            // The slash-position key outputs hyphen/underscore (–/_) as in the Chilean layout
        };

        // Lower Layer: Numbers (0–9 unshifted)
        lower_layer {
            bindings = <
                &kp N1   &kp N2    &kp N3    &kp N4    &kp N5    &none      // Row 1 left (1–5, 6th unused)
                &none    &kp N6    &kp N7    &kp N8    &kp N9    &kp N0      // Row 1 right (unused, 6–0)
                &none    &none     &none     &none     &none     &none      // Row 2 not used for numbers
                &none    &none     &none     &none     &none     &none      // Row 2 (right) not used
                &none    &none     &none     &none     &none     &none      // Row 3 not used
                &none    &none     &none     &none     &none     &none      // Row 3 (right) not used
                // Thumbs (unchanged on number layer)
                &mo LOWER  &kp SPACE  &kp LALT
                &mo RAISE  &kp ENTER  &kp BSPC
            >;
            // Number keys 1–0 output digits without Shift (same as on Chilean layout)
        };

        // Raise Layer: Symbols and Punctuation (Chilean positions)
        raise_layer {
            bindings = <
                &kp EXCL   &kp DQT    &kp HASH   &kp DLLR   &kp PRCNT  &none   // Row 1 left: !, ", #, $, %  (Shift+1–5)
                &none      &kp AMPS   &kp FSLH   &kp LPAR   &kp RPAR   &kp PLUS // Row 1 right: &, /, (, ), +  (Shift+6–0 and +)
                &none      &none      &none      &none      &none      &none   // Row 2 left (unused)
                &none      &none      &none      &kp QMARK  &kp AT     &kp BSLH // Row 2 right: ? (on ñ key), @ (on bracket key), \ (on extra key)
                &none      &none      &none      &none      &none      &none   // Row 3 left (unused)
                &none      &none      &kp SEMI   &kp COLON  &kp UNDER  &none   // Row 3 right: ; and : (on comma/period keys), _ (on hyphen key)
                // Thumbs (unchanged on symbol layer)
                &mo LOWER  &kp SPACE  &kp LALT
                &mo RAISE  &kp ENTER  &kp BSPC
            >;
            // Symbols are placed on the same physical keys as in the Chilean layout:
            //  - Top row: ! " # $ % (on keys 1–5), & / ( ) = + (on keys 6–0 and accent key):contentReference[oaicite:5]{index=5}
            //  - The ñ key outputs ? on this layer (since Shift on that key is ? in Spanish layout):contentReference[oaicite:6]{index=6} 
            //  - @ is on the bracket key (as AltGr+Q in Spanish) for easy access
            //  - The pipe/backslash key is provided on the extra key (as Chilean layout requires AltGr for "|\\")
            //  - Semicolon and colon can be typed via comma and period with Shift on a Spanish layout
            //    (they are also directly assigned here for convenience)
        };
    };
};
